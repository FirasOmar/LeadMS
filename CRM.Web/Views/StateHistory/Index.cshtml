@using CRM.Web.Helpers
@model PagedList.IPagedList<CRM.Web.Models.StateHistoryViewModel>
@using PagedList.Mvc
@{
    ViewBag.Title = Resources.StateHistory.Title;
    Layout = "~/Views/Shared/_LayoutCMS.cshtml";
    var statuses = LookupHelper.GetStatuses(Request.Cookies["_culture"]);
}

<script src="https://code.jquery.com/jquery-3.1.0.min.js" integrity="sha256-cCueBR6CsyA4/9szpPfrX3s49M9vUU5BgtiJj06wt/s=" crossorigin="anonymous"></script>

<main>
    <section class="section">
        <div class="container-fluid">


            <header class="section-header justify-content-between flex-wrap" id="headerIndex">
                <div class="d-flex">
                    <button class="ml-2 sidebar-toggle d-lg-none"><i class="fa fa-bars"></i></button>
                    <h2 class="section-title">@ViewBag.Title</h2>
                </div>
                <div class="header-form" id="divAddNew_Search">

                    <a id="btnCreateProfile" style="display: none" onclick="ShowCreateForm()" class="btn btn-primary ml-2" href="#">@Resources.UserProfile.TxtAddNewProfile</a>
                    @using (Html.BeginForm())
                    {
                        @Html.Hidden("resetTo", 1)

                        @Html.TextBox("searchText", null, new { placeholder = Resources.Layout.TxtSearchFor })
                        <button class="btn btn-secondary" type="submit"><span class="icon-search"></span></button>
                    }
                </div>
            </header>


            <table class="c-table mb-4">
                <thead class="card-header" data-background-color="purple">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.ElementAt(0).CaseName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ElementAt(0).PreviousState)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ElementAt(0).CurrentState)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ElementAt(0).CreatedOn)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody class="ts">
                    @foreach (var item in Model)
                    {
                        <tr id="TableData">
                            <td>
                                @Html.DisplayFor(modelItem => item.CaseName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PreviousStateName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CurrentStateName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CreatedOn)
                            </td>
                            <td>
                                <a href="@Url.Action("Details", new {id = item.Id})" class="disabled btnStateHistoryDetails" title="@Resources.SystemCases.BtnDetails"><i class="fa fa-eye text-success"></i></a>
                                <a href="@Url.Action("Delete", new {id = item.Id})" class="btnStateHistoryDelete" title="@Resources.SystemCases.BtnDelete"><i class="fa fa-trash text-danger"></i></a>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>


            @if (Model.PageCount > 0)
            {
                <nav aria-label="Page navigation example" id="divPageing" class="text-center">
                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchText = ViewBag.SearchText }))
                </nav>
            }
        </div>
    </section>

</main>
<script type="text/javascript">
    $(function () {
        $.get("/api/accountpermission/IsAccessAllowed?page=StateHistory", function (data) {
            if (data != null) {
                if (data.HasAccess === true) {
                    permission = data;

                    if (data.AllowedPermissonsList.includes("View")) {
                        $(".btnStateHistoryDetails").removeClass("disabled");
                    }

                    if (data.AllowedPermissonsList.includes("Delete")) {
                        $(".btnStateHistoryDelete").removeClass("disabled");
                    }
                }
            }
        }).fail(function (data) {
            alert("Error while validating user permission");
        });
    });
</script>