@using CRM.Core.SystemEnums
@using CRM.Web.Helpers
@model PagedList.IPagedList<CRM.Web.Models.SlaViewModel>
@using PagedList.Mvc
@{
    ViewBag.Title = Resources.Sla.Title;
    Layout = "~/Views/Shared/_LayoutCMS.cshtml";
    var statuses = LookupHelper.GetStatuses(Request.Cookies["_culture"]);
}

<script src="https://code.jquery.com/jquery-3.1.0.min.js" integrity="sha256-cCueBR6CsyA4/9szpPfrX3s49M9vUU5BgtiJj06wt/s=" crossorigin="anonymous"></script>

<main>
    <section class="section">
        <div class="container-fluid">
            <header class="section-header justify-content-between flex-wrap" id="headerIndex">
                <div class="d-flex">
                    <button class="ml-2 sidebar-toggle d-lg-none"><i class="fa fa-bars"></i></button>
                    <h2 class="section-title">@ViewBag.Title</h2>
                </div>
                <div class="header-form" id="divAddNew_Search">

                    <a id="btnCreateSla" onclick="ShowCreateForm()" class="btn btn-primary ml-2 disabled" href="#">@Resources.Sla.TxtAddNewSla</a>
                    @using (Html.BeginForm())
                    {
                        @Html.Hidden("resetTo", 1)

                        @Html.TextBox("searchText", null, new { placeholder = Resources.Layout.TxtSearchFor })
                        <button class="btn btn-secondary" type="submit"><span class="icon-search"></span></button>
                    }
                </div>
            </header>

            <header class="section-header justify-content-between flex-wrap" id="headerEdit" style="display:none">
                <div class="d-flex">
                    <button class="ml-2 sidebar-toggle d-lg-none"><i class="fa fa-bars"></i></button>
                    <h2 class="section-title">@Resources.Sla.TxtUpdateSla</h2>
                </div>
                <div class="d-flex align-items-start">
                    <span class="ml-2">لغة المحتوى</span>
                    <div class="btn-toolbar" role="toolbar">
                        <div class="btn-group mr-2" role="group" aria-label="First group">
                            <button id="btnHebrewEdit" type="button" class="btn btn-secondary">@Resources.Sla.HebrewContent</button>
                            <button id="btnArabicEdit" type="button" class="btn btn-primary">@Resources.Sla.ArabicContent</button>
                        </div>
                    </div>
                </div>
            </header>

            <header class="section-header justify-content-between flex-wrap" id="headerCreate" style="display:none">
                <div class="d-flex">
                    <button class="ml-2 sidebar-toggle d-lg-none"><i class="fa fa-bars"></i></button>
                    <h2 class="section-title">@Resources.Sla.TxtAddNewSla</h2>
                </div>
                <div class="d-flex align-items-start">
                    <span class="ml-2">لغة المحتوى</span>
                    <div class="btn-toolbar" role="toolbar">
                        <div class="btn-group mr-2" role="group" aria-label="First group">
                            <button id="btnHebrew" type="button" class="btn btn-secondary">@Resources.Sla.HebrewContent</button>
                            <button id="btnArabic" type="button" class="btn btn-primary">@Resources.Sla.ArabicContent</button>
                        </div>
                    </div>
                </div>
            </header>

            <input type="hidden" id="LanguageId" name="LanguageId" value="1" />

            <div id="CreateSla" style="display: none" class="row">
                <div class="col-lg-4 cms-col-header">
                    <h2>
                        @Resources.Sla.TxtAddNewSla
                    </h2>
                </div>
                <div class="col-lg-8">
                    <form method="post" onsubmit="CreateSla()">
                        <div class="row">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group col-lg-6">
                                <label for="Name">@Resources.Sla.Name</label>
                                <input class="form-control" type="text" required name="Name" id="Name" />
                            </div>

                            <div class="form-group col-lg-6">
                                <label for="Description">@Resources.Sla.Description</label>
                                <input class="form-control" type="text" required name="Description" id="Description" />
                            </div>

                            <div class="form-group col-lg-6">
                                <label for="WorkingDaysIncludingHolidays">@Resources.Sla.WorkingDaysIncludingHolidays (@Resources.Sla.IncludingHolidays)</label>
                                <br />
                                <input class="form-control chkbx" type="checkbox" name="WorkingDaysIncludingHolidays" id="WorkingDaysIncludingHolidays" />
                            </div>
                            <div class="form-group col-lg-6">
                                <label for="HoursPerState">@Resources.Sla.HoursPerState</label>
                                <input class="form-control" type="number" required name="HoursPerState" id="HoursPerState" />
                            </div>
                            <div class="form-group col-lg-6">
                                <label for="NotifyBefore">@Resources.Sla.NotifyBefore</label>
                                <input class="form-control" type="number" required name="NotifyBefore" id="NotifyBefore" />
                            </div>
                            <div class="form-group col-lg-6">
                                <label for="NotificationCount">@Resources.Sla.NotificationCount</label>
                                <input class="form-control" type="text" required name="NotificationCount" id="NotificationCount" />
                            </div>
                            <div class="form-group col-lg-6">
                                <label for="PropogateToManager">@Resources.Sla.PropogateToManager</label>
                                <br />
                                <input class="form-control chkbx" type="checkbox" name="PropogateToManager" id="PropogateToManager" />
                            </div>
                            <div class="form-group col-lg-6">
                                <label for="CcAssignee">@Resources.Sla.CcAssignee</label>
                                <br />
                                <input class="form-control chkbx" type="checkbox" name="CcAssignee" id="CcAssignee" />
                            </div>
                            <div class="form-group col-lg-6">
                                <label for="Status">@Resources.Sla.TxtStatus</label>
                                @Html.DropDownList("Status", new SelectList(statuses, "Id", "Name"), string.Empty, new { @class = "form-control chosen-select", required = "required" })
                            </div>

                            <div class="form-group col-lg-3">
                                <label for="SendEmployee">@Resources.Sla.TxtSendToEmployee</label><br />
                                <input type="checkbox" value="true" name="SendEmployee" id="SendEmployee" />
                                <input type="hidden" value="false" name="SendEmployee" id="SendEmployee" />
                            </div>
                            <div class="form-group col-lg-3">
                                <label for="SendCitizen">@Resources.Sla.TxtSendToCitizen</label><br />
                                <input type="checkbox" value="true" name="SendCitizenEdit" id="SendCitizen" />
                                <input type="hidden" value="false" name="SendCitizenEdit" id="SendCitizen" />
                            </div>

                            <div class="form-group col-lg-12">
                                <button class="btn btn-primary" type="submit" id="btnCreate">@Resources.Sla.BtnAdd</button>
                                <button class="btn btn-secondary" id="btnCancel_Add">@Resources.Sla.BtnCancel</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <div class="row" style="display: none" id="EditSla">
                <div class="col-lg-4 cms-col-header">
                    <h2>@Resources.Sla.TxtUpdateSla</h2>
                </div>
                <div class="col-lg-8">
                    <form method="post" onsubmit="SaveSla()">
                        <div class="row">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <input type="hidden" id="IdEdit" name="IdEdit" />

                            <div class="form-group col-lg-6">
                                <label for="NameEdit">@Resources.Sla.Name</label>
                                <input class="form-control" type="text" required name="NameEdit" id="NameEdit" />
                            </div>

                            <div class="form-group col-lg-6">
                                <label for="DescriptionEdit">@Resources.Sla.Description</label>
                                <input class="form-control" type="text" required name="DescriptionEdit" id="DescriptionEdit" />
                            </div>

                            <div class="form-group col-lg-6">
                                <label for="WorkingDaysIncludingHolidaysEdit">@Resources.Sla.WorkingDaysIncludingHolidays (@Resources.Sla.IncludingHolidays)</label>
                                <br />
                                <input class="form-control chkbx" type="checkbox" name="WorkingDaysIncludingHolidaysEdit" id="WorkingDaysIncludingHolidaysEdit" />
                            </div>
                            <div class="form-group col-lg-6">
                                <label for="HoursPerStateEdit">@Resources.Sla.HoursPerState</label>
                                <input class="form-control" type="number" required name="HoursPerStateEdit" id="HoursPerStateEdit" />
                            </div>
                            <div class="form-group col-lg-6">
                                <label for="NotifyBeforeEdit">@Resources.Sla.NotifyBefore</label>
                                <input class="form-control" type="number" required name="NotifyBeforeEdit" id="NotifyBeforeEdit" />
                            </div>
                            <div class="form-group col-lg-6">
                                <label for="NotificationCountEdit">@Resources.Sla.NotificationCount</label>
                                <input class="form-control" type="text" required name="NotificationCountEdit" id="NotificationCountEdit" />
                            </div>
                            <div class="form-group col-lg-6">
                                <label for="PropogateToManagerEdit">@Resources.Sla.PropogateToManager</label>
                                <br />
                                <input class="form-control chkbx" type="checkbox" name="PropogateToManagerEdit" id="PropogateToManagerEdit" />
                            </div>
                            <div class="form-group col-lg-6">
                                <label for="CcAssigneeEdit">@Resources.Sla.CcAssignee</label>
                                <br />
                                <input class="form-control chkbx" type="checkbox" name="CcAssigneeEdit" id="CcAssigneeEdit" />
                            </div>
                            <div class="form-group col-lg-6">
                                <label for="StatusEdit">@Resources.Sla.TxtStatus</label>
                                @Html.DropDownList("StatusEdit", new SelectList(statuses, "Id", "Name"), string.Empty, new { @class = "form-control chosen-select", required = "required" })
                            </div>
                            <div class="form-group col-lg-3">
                                <label for="SendEmployeeEdit">@Resources.SMSTemplate.TxtSendToEmployee</label><br />
                                <input type="checkbox" value="true" name="SendEmployeeEdit" id="SendEmployeeEdit" />
                                <input type="hidden" value="false" name="SendEmployeeEdit" id="SendEmployeeEdit" />
                            </div>
                            <div class="form-group col-lg-3">
                                <label for="SendCitizenEdit">@Resources.SMSTemplate.TxtSendToCitizen</label><br />
                                <input type="checkbox" value="true" name="SendCitizenEdit" id="SendCitizenEdit" />
                                <input type="hidden" value="false" name="SendCitizenEdit" id="SendCitizenEdit" />
                            </div>
                            @{
                                var complaintCategories = LookupHelper.GetLookupDetailsByMasterId((int)GeneralEnums.MasterLookupEnums.CaseCategory, Request.Cookies["_culture"]);
                                var emergencyCategories = LookupHelper.GetLookupDetailsByMasterId((int)GeneralEnums.MasterLookupEnums.EmergencyCategories, Request.Cookies["_culture"]);
                                var formCategories = LookupHelper.GetLookupDetailsByMasterId((int)GeneralEnums.MasterLookupEnums.FormCategories, Request.Cookies["_culture"]);
                                var jobCategories = LookupHelper.GetLookupDetailsByMasterId((int)GeneralEnums.MasterLookupEnums.JobCategories, Request.Cookies["_culture"]);
                                var tenderCategories = LookupHelper.GetLookupDetailsByMasterId((int)GeneralEnums.MasterLookupEnums.TenderCategories, Request.Cookies["_culture"]);
                                var categories = complaintCategories;
                                categories = complaintCategories;
                                categories.AddRange(formCategories);
                                categories.AddRange(jobCategories);
                                categories.AddRange(tenderCategories);
                                categories.AddRange(emergencyCategories);
                            }
                            <div class="col-md-12">
                                <h3>@Resources.Sla.SlaCategories</h3>
                                @foreach (var item in categories)
                                {
                                    var divId = "chxCategory_" + item.Id;
                                    <div class="userprofile-weekbox">
                                        @Html.CheckBox(divId, false, new { @class = "weekday-chkbx" })
                                        <label for="@divId" class="weekday-chkbx-lbl">
                                            @Html.Raw(item.Name)
                                        </label>
                                    </div>
                                }
                            </div>
                            @{
                                var ignoredStates = LookupHelper.GetLookupDetailsByMasterId((int)GeneralEnums.MasterLookupEnums.WorkFlowStates, Request.Cookies["_culture"]);
                            }
                            <div class="col-md-12">
                                <h3>@Resources.Sla.IgnoredStates</h3>
                                @foreach (var item in ignoredStates)
                                {
                                    var divId = "chxState_" + item.Id;
                                    <div class="userprofile-weekbox">
                                        @Html.CheckBox(divId, false, new { @class = "weekday-chkbx" })
                                        <label for="@divId" class="weekday-chkbx-lbl">
                                            @Html.Raw(item.Name)
                                        </label>
                                    </div>
                                }
                            </div>
                            <div class="form-group col-lg-12">
                                <button type="submit" class="btn btn-primary" id="btnSaveEdit">@Resources.Sla.BtnSave</button>
                                <input type="button" class="btn btn-secondary" id="btnCancel_Edit" value="@Resources.Sla.BtnCancel" />
                            </div>
                        </div>
                    </form>
                </div>
            </div>

            <table id="tableSlas" class="c-table mb-4">
                <thead class="card-header" data-background-color="purple">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.ElementAt(0).Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ElementAt(0).NotificationCount)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ElementAt(0).NotifyBefore)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ElementAt(0).PropogateToManager)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody class="ts">
                    @foreach (var item in Model)
                    {
                        <tr id="TableData">
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.NotificationCount)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.NotifyBefore)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PropogateToManager)
                            </td>
                            <td>
                                <a href="#" onclick="EditSla(@item.Id)" class="btnEditSla disabled" title="@Resources.Sla.BtnEdit"><i class="fa fa-edit text-dark"></i></a>
                                <a href="#" onclick="Delete(@item.Id)" class="btnDeleteSla disabled" title="@Resources.Sla.BtnDelete"><i class="fa fa-trash text-danger"></i></a>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
            @if (Model.PageCount > 0)
            {
                <nav aria-label="Page navigation example" id="divPageing" class="text-center">
                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchText = ViewBag.SearchText }))
                </nav>
            }
        </div>
    </section>

</main>

<script type="text/javascript">
    var permission = {};
    $("#btnHebrew").click(function () {
        $("#LanguageId").val(2);
        EditSla($("#IdEdit").val());
    });
    $("#btnArabic").click(function () {
        $("#LanguageId").val(1);
        EditSla($("#IdEdit").val());
    });

    $("#btnHebrewEdit").click(function () {
        $("#LanguageId").val(2);
        EditSla($("#IdEdit").val());
    });
    $("#btnArabicEdit").click(function () {
        $("#LanguageId").val(1);
        EditSla($("#IdEdit").val());
    });
    $("#EditSla").hide();

    function ShowCreateForm() {
        if (!permission.AllowedPermissonsList.includes("Create")) {
            return;
        }
        $("#CreateSla").show();
        $("#btnCreateSla").hide();
    }
    function CreateSla() {
        if (!permission.AllowedPermissonsList.includes("Create")) {
            return;
        }
        var obj = {};
        obj.Name = $("#Name").val();
        obj.Description = $("#Description").val();
        obj.WorkingDaysIncludingHolidays = $("#WorkingDaysIncludingHolidays").is(":checked");
        obj.HoursPerState = $("#HoursPerState").val();
        obj.NotifyBefore = $("#NotifyBefore").val();
        obj.SendEmployee = $("#SendEmployee").prop("checked");
        obj.SendCitizen = $("#SendCitizen").prop("checked");
        obj.NotificationCount = $("#NotificationCount").val();
        obj.PropogateToManager = $("#PropogateToManager").is(":checked");
        obj.CcAssignee = $("#CcAssignee").is(":checked");
        obj.Status = $("#Status").val();
        $.post("/Sla/AddSla",
            { slaVm: obj },
            function(data) {
                if (data != null) {
                    location.reload();
                } else {
                    alert("Error");
                }
            });
    }


    function EditSla(id) {
        if (!permission.AllowedPermissonsList.includes("Edit")) {
            return;
        }
        var languageId = $("#LanguageId").val();
        $.get("/Sla/EditSla", { id: id, languageId: languageId }, function (data) {
            if (data != null) {
                $("#CreateSla").hide();
                $("#btnCreateSla").hide();
                $("#EditSla").show();

                $("#NameEdit").val(data.Name);
                $("#DescriptionEdit").val(data.Description);
                if (data.WorkingDaysIncludingHolidays) {
                    $("#WorkingDaysIncludingHolidaysEdit").prop('checked', true);
                }
                $("#HoursPerStateEdit").val(data.HoursPerState);
                $("#NotifyBeforeEdit").val(data.NotifyBefore);
                $("#SendEmployeeEdit").prop("checked",data.SendEmployee);
                $("#SendCitizenEdit").prop("checked", data.SendCitizen);
                $("#NotificationCountEdit").val(data.NotificationCount);
                if (data.PropogateToManager) {
                    $("#PropogateToManagertEdit").prop('checked', true);
                }
                if (data.CcAssignee) {
                    $("#CcAssigneeEdit").prop('checked', true);
                }
                $("#StatusEdit").val(data.Status);
                $('#StatusEdit').trigger("chosen:updated");
                $("#IdEdit").val(id);
                if (data.IgnoredStates) {
                    data.IgnoredStates.forEach(function (element) {
                        var state = $("#chxState_" + element.Id);
                        if (state) {
                            $("#chxState_" + element.Id).prop('checked', true);;
                        }
                    });
                }

                if (data.Categories) {
                    data.Categories.forEach(function (element) {
                        var state = $("#chxCategory_" + element.Id);
                        if (state) {
                            $("#chxCategory_" + element.Id).prop('checked', true);;
                        }
                    });
                }

                $('.main-panel').animate({ scrollTop: 0 }, 'slow');
            }
        });
    }

    function SaveSla() {
        if (!permission.AllowedPermissonsList.includes("Edit")) {
            return;
        }
        var states = $('*[id^="chxState_"]');
        var categories = $('*[id^="chxCategory_"]');
        var ignoredStates = [];
        var categoriesList = [];
        var obj = {};
        obj.Id = $("#IdEdit").val();
        obj.Name = $("#NameEdit").val();
        obj.Description = $("#DescriptionEdit").val();
        obj.WorkingDaysIncludingHolidays = $("#WorkingDaysIncludingHolidaysEdit").is(":checked");
        obj.HoursPerState = $("#HoursPerStateEdit").val();
        obj.NotifyBefore = $("#NotifyBeforeEdit").val();
        obj.SendEmployee = $("#SendEmployeeEdit").prop("checked");
        obj.SendCitizen = $("#SendCitizenEdit").prop("checked");
        obj.NotificationCount = $("#NotificationCountEdit").val();
        obj.PropogateToManager = $("#PropogateToManagertEdit").is(":checked");
        obj.CcAssignee = $("#CcAssigneeEdit").is(":checked");
        obj.Status = $("#StatusEdit").val();
        states.each(function(element){
            var state = $("#" + states[element].id).is(":checked");
            if (state) {
                var statObj = {};
                statObj.Id = states[element].id.replace('chxState_', '');
                ignoredStates.push(statObj);
            }
        });
        obj.IgnoredStates = ignoredStates;

        categories.each(function (element) {
            var category = $("#" + categories[element].id).is(":checked");
            if (category) {
                var categoryObj = {};
                categoryObj.Id = categories[element].id.replace('chxCategory_', '');
                categoriesList.push(categoryObj);
            }
        });
        obj.Categories = categoriesList;
        $.post("/Sla/EditSla",
            { sla: obj },
            function (data) {
                if (data != null) {
                    location.reload();
                } else {
                    alert("Error");
                }
            });
    }

    $("#btnCancel").click(function () {
        if (!permission.AllowedPermissonsList.includes("Create")) {
            $("#CreateSla").hide();
            $("#btnCreateSla").show();
            $("#EditSla").hide();
            return;
        }
        $("#CreateSla").show();
        $("#EditSla").hide();
    });

    function Delete(id) {
        if (!permission.AllowedPermissonsList.includes("Delete")) {
            return;
        }
        var confirmed = confirm("@Resources.Sla.TxtDeleteConfirmationMessage");
        if (confirmed === true) {
            $.post("/Sla/DeleteSla", { id: id }, function (data) {
                if (data != null) {
                    location.reload();
                }
                else {
                    alert("Error");
                }
            });
        }

    }

    $(function () {
        $.get("/api/accountpermission/IsAccessAllowed?page=Sla", function (data) {
            if (data != null) {
                if (data.HasAccess === true) {
                    permission = data;
                    if (data.AllowedPermissonsList.includes("Create")) {
                        $("#btnCreateSla").removeClass("disabled");
                    }

                    if (data.AllowedPermissonsList.includes("Edit")) {
                        $(".btnEditSla").removeClass("disabled");
                    }

                    if (data.AllowedPermissonsList.includes("Delete")) {
                        $(".btnDeleteSla").removeClass("disabled");
                    }
                }
            }
        }).fail(function (data) {
            alert("Error while validating user permission");
        });
    });

    $("#btnCancel_Edit").click(function (event) {
        event.preventDefault();
        $("#CreateSla").hide();
        $("#EditSla").hide();

        $("#tableSlas").show();
        $("#divAddNew_Search").show();
        $("#divPageing").show();
        $("#headerCreate").hide();
        $("#headerEdit").hide();
        $("#headerIndex").show();
        $("#btnCreateSla").show();
    });
    $("#btnCancel_Add").click(function (event) {
        event.preventDefault();
        $("#CreateSla").hide();
        $("#EditSla").hide();

        $("#tableSlas").show();
        $("#divAddNew_Search").show();
        $("#divPageing").show();
        $("#headerCreate").hide();
        $("#headerEdit").hide();
        $("#headerIndex").show();
        $("#btnCreateSla").show();
    });
</script>  