@using CRM.Core.SystemEnums
@model PagedList.IPagedList<CRM.Web.Models.RolePermissionsViewModel>
@using PagedList.Mvc
@{
    ViewBag.Title = Resources.RolePermissions.Title;
    Layout = "~/Views/Shared/_LayoutCMS.cshtml";
}

<style>
    .sel {
        color: black;
        box-sizing: border-box;
        overflow: hidden;
        border: 1px solid #aaaaaa;
        border-radius: 6px;
    }

    .txt {
        padding: 1px 10px;
        background-image: linear-gradient(#eee 20%, #fff 80%);
        box-shadow: 0 1px 0 #fff inset;
        height: 20px;
    }

    .selected {
        background-color: #3875d7;
        background-image: -webkit-gradient(linear, left top, left bottom, color-stop(20%, #3875d7), color-stop(90%, #2a62bc));
        background-image: linear-gradient(#3875d7 20%, #2a62bc 90%);
        color: #fff;
    }

    .hide1 {
        display: none;
    }

    .sel .options {
        width: 100%;
        background-color: #ffffff;
        border: 1px solid #aaaaaa;
        border-radius: 5px;
        position: absolute;
        z-index: 5;
    }

        .sel .options div {
            transition: all 0.2s ease-out;
            padding: 10px;
        }

            .sel .options div:hover {
                background-color: #3875d7;
                background-image: -webkit-gradient(linear, left top, left bottom, color-stop(20%, #3875d7), color-stop(90%, #2a62bc));
                background-image: linear-gradient(#3875d7 20%, #2a62bc 90%);
                color: #fff;
            }
</style>

<script src="https://code.jquery.com/jquery-3.1.0.min.js" integrity="sha256-cCueBR6CsyA4/9szpPfrX3s49M9vUU5BgtiJj06wt/s=" crossorigin="anonymous"></script>

<main>
    <section class="section">
        <div class="container-fluid">


            <header class="section-header justify-content-between flex-wrap" id="headerIndex">
                <div class="d-flex">
                    <button class="ml-2 sidebar-toggle d-lg-none"><i class="fa fa-bars"></i></button>
                    <h2 class="section-title">@ViewBag.Title</h2>
                </div>
                <div class="header-form" id="divAddNew_Search">

                    <a id="btnCreateRole" onclick="ShowCreateForm()" class="btn btn-primary ml-2 disabled" href="#">@Resources.RolePermissions.TxtAddNewRole</a>
                    @using (Html.BeginForm())
                    {
                        @Html.Hidden("resetTo", 1)

                        @Html.TextBox("searchText", null, new { placeholder = Resources.Layout.TxtSearchFor })
                        <button class="btn btn-secondary" type="submit"><span class="icon-search"></span></button>
                    }
                </div>
            </header>

            <header class="section-header justify-content-between flex-wrap" id="headerEdit" style="display:none">
                <div class="d-flex">
                    <button class="ml-2 sidebar-toggle d-lg-none"><i class="fa fa-bars"></i></button>
                    <h2 class="section-title">@Resources.RolePermissions.TxtUpdateRolePermissions</h2>
                </div>
                <div class="d-flex align-items-start">
                    <span class="ml-2">لغة المحتوى</span>
                    <div class="btn-toolbar" role="toolbar">
                        <div class="btn-group mr-2" role="group" aria-label="First group">
                            <button id="btnHebrewEdit" type="button" class="btn btn-secondary">@Resources.RolePermissions.HebrewContent</button>
                            <button id="btnArabicEdit" type="button" class="btn btn-primary">@Resources.RolePermissions.ArabicContent</button>
                        </div>
                    </div>
                </div>
            </header>

            <header class="section-header justify-content-between flex-wrap" id="headerCreate" style="display:none">
                <div class="d-flex">
                    <button class="ml-2 sidebar-toggle d-lg-none"><i class="fa fa-bars"></i></button>
                    <h2 class="section-title">@Resources.RolePermissions.TxtAddNewRole</h2>
                </div>
                <div class="d-flex align-items-start">
                    <span class="ml-2">لغة المحتوى</span>
                    <div class="btn-toolbar" role="toolbar">
                        <div class="btn-group mr-2" role="group" aria-label="First group">
                            <button id="btnHebrew" type="button" class="btn btn-secondary">@Resources.RolePermissions.HebrewContent</button>
                            <button id="btnArabic" type="button" class="btn btn-primary">@Resources.RolePermissions.ArabicContent</button>
                        </div>
                    </div>
                </div>
            </header>

            <input type="hidden" id="LanguageId" name="LanguageId" value="1" />
            <input type="hidden" id="CategoryImageUrl" name="CategoryImageUrl" value="" />

            <div id="CreateRole" style="display: none" class="row">
                <div class="col-lg-4 cms-col-header">
                    <h2>
                        @Resources.RolePermissions.TxtAddNewRole
                    </h2>
                </div>
                <div class="col-lg-8">
                    <form method="post" onsubmit="CreateRole()">
                        <div class="row">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group col-lg-6">
                                <label for="RoleId">@Resources.RolePermissions.TxtRoleId</label>
                                <input class="form-control" type="text" required name="RoleId" id="RoleId" />
                            </div>

                            <div class="form-group col-lg-6">
                                <label for="RoleName">@Resources.RolePermissions.TxtRoleName</label>
                                <input class="form-control" type="text" required name="RoleName" id="RoleName" />
                            </div>

                            <div class="form-group col-lg-6">
                                <label for="RoleFriendlyName">@Resources.RolePermissions.TxtRoleFriendlyName</label>
                                <input class="form-control" type="text" required name="RoleFriendlyName" id="RoleFriendlyName" />
                            </div>

                            <div class="form-group col-lg-6">
                                <label for="RoleDescription">@Resources.RolePermissions.TxtRoleDescription</label>
                                <input class="form-control" type="text" required name="RoleDescription" id="RoleDescription" />
                            </div>


                            <div class="form-group col-lg-12">
                                <button class="btn btn-primary" type="submit" id="btnCreate">@Resources.RolePermissions.BtnAdd</button>
                                <button class="btn btn-secondary" id="btnCancel_Add">@Resources.RolePermissions.BtnCancel</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <div class="row" style="display: none" id="EditRolePermissions">
                <div class="col-lg-4 cms-col-header">
                    <h2>@Resources.RolePermissions.TxtUpdateRolePermissions</h2>
                </div>
                <div class="col-lg-8">
                    <form method="post" onsubmit="SaveRolePermissions()">
                        <div class="row">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <input type="hidden" id="IdEdit" name="IdEdit" />

                            <span id="permissions">
                            </span>

                            <div class="form-group col-lg-12">
                                <button type="submit" class="btn btn-primary" id="btnSaveEdit">@Resources.RolePermissions.BtnSave</button>
                                <input type="button" class="btn btn-secondary" id="btnCancel_Edit" value="@Resources.RolePermissions.BtnCancel" />
                            </div>

                        </div>
                    </form>
                </div>
            </div>

            <table id="tableRolePermissions" class="c-table mb-4">
                <thead class="card-header" data-background-color="purple">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.ElementAt(0).RoleName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ElementAt(0).RoleFriendlyName)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody class="ts">
                    @foreach (var item in Model)
                    {
                        <tr class="parentPermission" id="TableData">
                            <td>
                                @Html.DisplayFor(modelItem => item.RoleName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.RoleFriendlyName)
                            </td>

                            <td>
                                <a href="#" onclick="EditRolePermission(@item.Id)" class="btnEditRolePermission disabled" title="@Resources.RolePermissions.BtnEdit"><i class="fa fa-edit text-dark"></i></a>
                                <a href="#" onclick="Delete(@item.Id)" class="btnDeleteRolePermission disabled" title="@Resources.RolePermissions.BtnDelete"><i class="fa fa-trash text-danger"></i></a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            @if (Model.PageCount > 0)
            {
                <nav aria-label="Page navigation example" id="divPageing" class="text-center">
                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchText = ViewBag.SearchText }))

                </nav>
            }
        </div>
    </section>

</main>

<script type="text/javascript">
    $("#EditRolePermissions").hide();

    function ShowCreateForm() {
        if (!permission.AllowedPermissonsList.includes("Create")) {
            return;
        }
        $("#CreateRole").show();
        $("#btnCreateRole").hide();
    }
    function CreateRole() {
        if (!permission.AllowedPermissonsList.includes("Create")) {
            return;
        }
        var obj = {};
        obj.Id = $("#RoleId").val();
        obj.Name = $("#RoleName").val();
        obj.FriendlyName = $("#RoleFriendlyName").val();
        obj.Description = $("#RoleDescription").val();

        $.post("/RolePermissions/AddRole",
            { role: obj },
            function (data) {
                if (data != null) {
                    location.reload();
                } else {
                    alert("Error");
                }
            });
    }

    function EditRolePermission(id) {
        if (!permission.AllowedPermissonsList.includes("Edit")) {
            return;
        }
        $.get("/RolePermissions/EditPermission", { id: id }, function (data) {
            if (data != null) {
                $("#CreateRole").hide();
                $("#EditRolePermissions").show();
                $("#btnCreateRole").hide();
                $("#permissions").html(data);
                $("#IdEdit").val(id);
                $('.main-panel').animate({ scrollTop: 0 }, 'slow');
            }
        });
    }
    function SaveRolePermissions() {
        if (!permission.AllowedPermissonsList.includes("Edit")) {
            return;
        }
        var obj = {};
        var pagePermissions = $("#PermissionsList").val();
        obj.Id = $("#IdEdit").val();
        obj.RoleName = $("#NewRoleName").val();
        obj.RoleFriendlyName = $("#NewRoleFriendlyName").val();
        obj.RoleDescription = $("#NewRoleDescription").val();
        obj.Permissions = pagePermissions;
        $.post("/RolePermissions/EditPermission",
            { permission: obj },
            function (data) {
                if (data != null) {
                    location.reload();
                } else {
                    alert("Error");
                }
            });
    }
    $("#btnCancel").click(function () {
        if (!permission.AllowedPermissonsList.includes("Create")) {
            $("#CreateRole").hide();
            $("#btnCreateRole").show();
            $("#EditRolePermissions").hide();
            return;
        }
        $("#CreateRole").show();
        $("#EditRolePermissions").hide();
    });
    function Delete(id) {
        if (!permission.AllowedPermissonsList.includes("Delete")) {
            return;
        }
        var confirmed = confirm("@Resources.RolePermissions.TxtDeleteConfirmationMessage");
        if (confirmed === true) {
            $.post("/RolePermissions/DeleteRole", { id: id }, function (data) {
                if (data != null) {
                    location.reload();
                }
                else {
                    alert("Error");
                }
            });
        }
    }
    @{
        int pageId = (int) GeneralEnums.PageEnum.Permission;
    }
    $(function () {
        $.get("/api/accountpermission/IsAccessAllowed?page=RolesPermissions", function (data) {
            if (data != null) {
                if (data.HasAccess === true) {
                    permission = data;
                    if (data.AllowedPermissonsList.includes("Create")) {
                        $("#btnCreate").removeClass("disabled");
                    }

                    if (data.AllowedPermissonsList.includes("Create")) {
                        $("#btnCreateRole").removeClass("disabled");
                    }

                    if (data.AllowedPermissonsList.includes("Edit")) {
                        $(".btnEditRolePermission").removeClass("disabled");
                    }

                    if (data.AllowedPermissonsList.includes("Delete")) {
                        $(".btnDeleteRolePermission").removeClass("disabled");
                    }
                }
            }
        }).fail(function (data) {
            alert("Error while validating user permission");
        });
    });


    $("#btnCancel_Edit").click(function (event) {
        event.preventDefault();
        $("#CreateRole").hide();
        $("#EditRolePermissions").hide();

        $("#tableRolePermissions").show();
        $("#divAddNew_Search").show();
        $("#divPageing").show();
        $("#headerCreate").hide();
        $("#headerEdit").hide();
        $("#headerIndex").show();
        $("#btnCreateRole").show();
    });
    $("#btnCancel_Add").click(function (event) {
        event.preventDefault();
        $("#CreateRole").hide();
        $("#EditRolePermissions").hide();

        $("#tableRolePermissions").show();
        $("#divAddNew_Search").show();
        $("#divPageing").show();
        $("#headerCreate").hide();
        $("#headerEdit").hide();
        $("#headerIndex").show();
        $("#btnCreateRole").show();
    });

</script>



<script>
    var sel = $('.sel'),
   txt = $('.txt'),
   options = $('.options');
    viewIcon = $("#viewIcon");
    viewIconEdit = $("#viewIconEdit");
    sel.click(function (e) {

        e.stopPropagation();
        viewIcon.show();
        viewIconEdit.show();


    });

    $('body').click(function (e) {

        viewIcon.hide();
        viewIconEdit.hide();
    });

    viewIcon.children('div').click(function (e) {
        e.stopPropagation();
        txt.text($(this).text());
        $(this).addClass('selected').siblings('div').removeClass('selected');
        viewIcon.hide();

        var Id = $('#divIcon .options .selected').attr('id');
        $('#iconHidden').val(Id);
    });


    viewIconEdit.children('div').click(function (e) {
        e.stopPropagation();
        txt.text($(this).text());
        $(this).addClass('selected').siblings('div').removeClass('selected');
        viewIconEdit.hide();
        var Id = $('#divIconEdit .options .selected').attr('id');
        $('#iconHiddenEdit').val(Id);
    });
</script>