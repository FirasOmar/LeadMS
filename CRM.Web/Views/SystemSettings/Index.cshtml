@model PagedList.IPagedList<CRM.Core.Models.SettingViewModel>
@using CRM.Core.SystemEnums
@using PagedList.Mvc
@{
    ViewBag.Title = Resources.SystemSetting.Title;
    Layout = "~/Views/Shared/_LayoutCMS.cshtml";
}


<script src="https://code.jquery.com/jquery-3.1.0.min.js" integrity="sha256-cCueBR6CsyA4/9szpPfrX3s49M9vUU5BgtiJj06wt/s=" crossorigin="anonymous"></script>

<main>
    <section class="section">
        <div class="container-fluid">

            <header class="section-header justify-content-between flex-wrap" id="headerIndex">
                <div class="d-flex">
                    <button class="ml-2 sidebar-toggle d-lg-none"><i class="fa fa-bars"></i></button>
                    <h2 class="section-title">@Resources.SystemSetting.Title</h2>
                </div>
                <div class="header-form" id="divAddNew_Search">
                    <a id="btnCreateSystemSetting" onclick="ShowCreateForm()" class="btn btn-primary ml-2 disabled" href="#">@Resources.SystemSetting.TxtAddNewSystemSetting</a>
                    @using (Html.BeginForm())
                    {
                        @Html.Hidden("resetTo", 1)

                        @Html.TextBox("searchText", null, new { placeholder = Resources.Layout.TxtSearchFor })
                        <button class="btn btn-secondary" type="submit"><span class="icon-search"></span></button>
                    }
                </div>
            </header>

            <header class="section-header justify-content-between flex-wrap" id="headerEdit" style="display:none">
                <div class="d-flex">
                    <button class="ml-2 sidebar-toggle d-lg-none"><i class="fa fa-bars"></i></button>
                    <h2 class="section-title">@Resources.SystemSetting.TxtUpdateSystemSetting</h2>
                </div>
                <div class="d-flex align-items-start">
                    <span class="ml-2">لغة المحتوى</span>
                    <div class="btn-toolbar" role="toolbar">
                        <div class="btn-group mr-2" role="group" aria-label="First group">
                            <button id="btnHebrewEdit" type="button" class="btn btn-secondary">@Resources.SystemSetting.HebrewContent</button>
                            <button id="btnArabicEdit" type="button" class="btn btn-primary">@Resources.SystemSetting.ArabicContent</button>
                        </div>
                    </div>
                </div>
            </header>

            <header class="section-header justify-content-between flex-wrap" id="headerCreate" style="display:none">
                <div class="d-flex">
                    <button class="ml-2 sidebar-toggle d-lg-none"><i class="fa fa-bars"></i></button>
                    <h2 class="section-title">@Resources.SystemSetting.TxtAddNewSystemSetting</h2>
                </div>
                <div class="d-flex align-items-start">
                    <span class="ml-2">لغة المحتوى</span>
                    <div class="btn-toolbar" role="toolbar">
                        <div class="btn-group mr-2" role="group" aria-label="First group">
                            <button id="btnHebrew" type="button" class="btn btn-secondary">@Resources.SystemSetting.HebrewContent</button>
                            <button id="btnArabic" type="button" class="btn btn-primary">@Resources.SystemSetting.ArabicContent</button>
                        </div>
                    </div>
                </div>
            </header>


            <input type="hidden" id="LanguageId" name="LanguageId" value="1" />
            <div id="CreateSystemSetting" style="display: none" class="row">
                <div class="col-lg-4 cms-col-header">
                    <h2>
                        @Resources.SystemSetting.TxtAddSystemSetting
                    </h2>
                </div>
                <div class="col-lg-8">
                    <form method="post" onsubmit="CreateSystemSetting()">
                        <div class="row">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group col-lg-6">
                                <label for="Name">@Resources.SystemSetting.TxtName</label>
                                <input class="form-control" type="text" required name="Name" id="Name" />
                            </div>
                            <div class="form-group col-lg-6">
                                <label for="Value">@Resources.SystemSetting.TxtValue</label>
                                <input class="form-control" type="text" required name="Value" id="Value" />
                            </div>
                            <div class="form-group col-lg-6">
                                <label for="Status">@Resources.SystemSetting.TxtStatus</label>
                                @Html.DropDownList("Status", null, new { @class = "form-control chosen-select", required = "required" })
                            </div>
                            <div class="form-group col-lg-12">
                                <button class="btn btn-primary" type="submit" id="btnCreate">@Resources.SystemSetting.BtnAdd</button>
                                <button class="btn btn-secondary" id="btnCancel_Add">@Resources.SystemSetting.BtnCancel</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <div class="row" style="display: none" id="EditSystemSetting">
                <div class="col-lg-4 cms-col-header">
                    <h2>
                        @Resources.SystemSetting.TxtUpdateSystemSetting
                    </h2>
                </div>
                <div class="col-lg-8">
                    <form method="post" onsubmit="SaveSystemSetting()">
                        <div class="row">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <input type="hidden" id="IdEdit" name="IdEdit" />
                            <div class="form-group col-lg-6">
                                <label for="NameEdit">@Resources.SystemSetting.TxtName</label>
                                <input class="form-control" type="text" name="NameEdit" required id="NameEdit" disabled />
                            </div>
                            <div class="form-group col-lg-6">
                                <label for="ValueEdit">@Resources.SystemSetting.TxtValue</label>
                                <input class="form-control" type="text" name="ValueEdit" required id="ValueEdit" />
                            </div>

                            <div class="form-group col-lg-6">
                                <label for="StatusEdit">@Resources.SystemSetting.TxtStatus</label>
                                @Html.DropDownList("StatusEdit", null, new { @class = "form-control chosen-select", required = "required" })
                            </div>

                            <div class="form-group col-lg-6">
                                <button type="submit" class="btn btn-primary" id="btnSaveEdit">@Resources.SystemSetting.BtnSave</button>
                                <input type="button" class="btn btn-secondary" id="btnCancel_Edit" value="@Resources.SystemSetting.BtnCancel" />
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <table id="tableCategories" class="c-table mb-4">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.ElementAt(0).Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ElementAt(0).Value)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr id="TableData">
                            <td data-title="@Html.DisplayNameFor(model => model.ElementAt(0).Name)">
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td data-title="@Html.DisplayNameFor(model => model.ElementAt(0).Value)">
                                @Html.DisplayFor(modelItem => item.Value)
                            </td>
                            <td>
                                <a onclick="EditSystemSetting(@item.Id)" class="btnEditSystemSetting" title="@Resources.SystemSetting.BtnEdit"><i class="fa fa-edit text-dark disabled"></i></a>
                                <a onclick="Delete(@item.Id)" class="btnDeleteSystemSetting" title="@Resources.SystemSetting.BtnEdit"><i class="fa fa-trash mr-2 text-danger text-b disabled"></i></a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            @if (Model.PageCount > 0)
            {
                <nav aria-label="Page navigation example" id="divPageing" class="text-center">
                    @*@Resources.Layout.TxtPaginationPage @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) @Resources.Layout.TxtPaginationFrom @Model.PageCount ، @Resources.Layout.TxtPaginationItemNo: @Model.TotalItemCount*@
                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchText = ViewBag.SearchText }))
                </nav>
            }
        </div>
    </section>
</main>


<script type="text/javascript">
    var permission = {};
    $("#btnHebrew").click(function () {
        $("#LanguageId").val(2);
    });
    $("#btnArabic").click(function () {
        $("#LanguageId").val(1);
    });

    $("#btnHebrewEdit").click(function () {
        $("#LanguageId").val(2);
        EditSystemSetting($("#IdEdit").val());
    });
    $("#btnArabicEdit").click(function () {
        $("#LanguageId").val(1);
        EditSystemSetting($("#IdEdit").val());
    });
    $("#EditSystemSetting").hide();

    function ShowCreateForm() {
        if (!permission.AllowedPermissonsList.includes("Create")) {
            return;
        }
        $("#CreateSystemSetting").show();

        $("#tableCategories").hide();
        $("#divPageing").hide();
        $("#divAddNew_Search").hide();
        $("#headerCreate").hide();
        $("#headerEdit").show();
        $("#headerIndex").hide();
    }
    function CreateSystemSetting() {
        if (!permission.AllowedPermissonsList.includes("Create")) {
            return;
        }
        var obj = {};
        obj.Name = $("#Name").val();
        obj.Value = $("#Value").val();
        obj.Status = $("#Status").val();
        obj.LanguageId = $("#LanguageId").val();
        $.post("/SystemSettings/AddSystemSetting",
            { Setting: obj },
            function (data) {
                if (data != null) {
                    location.reload();

                } else {
                    alert("Error while adding new SystemSetting");
                }
            }).fail(function (data) {
                alert("Error while adding new SystemSetting");
            });
    }

    function EditSystemSetting(id) {
        if (!permission.AllowedPermissonsList.includes("Edit")) {
            return;
        }
        var languageId = $("#LanguageId").val();

        $.get("/SystemSettings/EditSystemSetting", { id: id, languageId: languageId }, function (data) {
            if (data != null) {

                $("#CreateSystemSetting").hide();
                $("#EditSystemSetting").show();

                $("#tableCategories").hide();
                $("#divPageing").hide();
                $("#divAddNew_Search").hide();
                $("#headerCreate").hide();
                $("#headerEdit").show();
                $("#headerIndex").hide();

                $("#NameEdit").val(data.Name);
                $("#ValueEdit").val(data.Value);
                $("#StatusEdit").val(data.Status);
                $('#StatusEdit').trigger("chosen:updated");
                $("#IdEdit").val(id);

            }
        });
        $('.main-panel').animate({ scrollTop: 0 }, 'slow');
    }



    function SaveSystemSetting() {
        if (!permission.AllowedPermissonsList.includes("Edit")) {
            return;
        }
        var obj = {};
        obj.Id = $("#IdEdit").val();
        obj.Value = $("#ValueEdit").val();
        obj.Name = $("#NameEdit").val();
        obj.Status = $("#StatusEdit").val();
        obj.LanguageId = $("#LanguageId").val();
        $.post("/SystemSettings/EditSystemSetting",
            { systemSettingViewModel: obj },
            function (data) {
                if (data != null) {
                    location.reload();
                } else {
                    alert("Error");
                }
            });
    }



    $("#btnCancel_Edit").click(function (event) {
        event.preventDefault();
        $("#CreateSystemSetting").hide();
        $("#EditSystemSetting").hide();

        $("#tableCategories").show();
        $("#divAddNew_Search").show();
        $("#divPageing").show();
        $("#headerCreate").hide();
        $("#headerEdit").hide();
        $("#headerIndex").show();
    });
    $("#btnCancel_Add").click(function (event) {
        event.preventDefault();
        $("#CreateSystemSetting").hide();
        $("#EditSystemSetting").hide();

        $("#tableCategories").show();
        $("#divAddNew_Search").show();
        $("#divPageing").show();
        $("#headerCreate").hide();
        $("#headerEdit").hide();
        $("#headerIndex").show();
    });

    function Delete(id) {
        if (!permission.AllowedPermissonsList.includes("Delete")) {
            return;
        }
        var confirmed = confirm("Are you sure!");
        if (confirmed === true) {
            $.post("/SystemSettings/DeleteSystemSetting", { id: id }, function (data) {
                if (data != null) {
                    location.reload();
                }
                else {
                    alert("Error");
                }
            });
        }

    }


    $(function () {
        $.get("/api/accountpermission/IsAccessAllowed?page=Settings", function (data) {
            if (data != null) {
                if (data.HasAccess === true) {
                    permission = data;
                    if (data.AllowedPermissonsList.includes("Create")) {
                        $("#btnCreateSystemSetting").removeClass("disabled");
                    }

                    if (data.AllowedPermissonsList.includes("Create")) {
                        $("#btnCreate").removeClass("disabled");
                    }
                    
                    if (data.AllowedPermissonsList.includes("Edit")) {
                        $(".btnEditSystemSetting").removeClass("disabled");
                    }

                    if (data.AllowedPermissonsList.includes("Delete")) {
                        $(".btnDeleteSystemSetting").removeClass("disabled");
                    }
                }
            }
        }).fail(function (data) {
            alert("Error while validating user permission");
        });
    });

   

</script>
